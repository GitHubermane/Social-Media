{"version":3,"file":"static/js/761.2b4bcb7d.chunk.js","mappings":"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","sources":["Components/Commons/CraftForms.jsx","webpack://project/./src/Components/Content/Profile/Posts/Posts.module.css?040d","Components/Content/Profile/Posts/Posts.jsx","webpack://project/./src/Components/Content/Profile/Profile.module.css?3c04","Components/Content/Profile/ProfileStatus.jsx","Components/Content/Profile/ProfileInfo.jsx","Components/Content/Profile/Profile.jsx","Redux/Selectors.js","Components/Content/Profile/ProfileContainer.jsx","Components/Utils/Validators.js","webpack://project/./src/Components/Commons/CraftForms.module.css?a41f","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from 'react'\r\nimport CraftFormsStyle from './CraftForms.module.css'\r\n\r\n\r\nexport const CraftForm = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={CraftFormsStyle.CraftForm__blockInput}>\r\n            <div>\r\n                {props.children}\r\n                {hasError && <span className={CraftFormsStyle.CraftForm__error}>Error</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    return <CraftForm {...props}><textarea placeholder={props.placeholder} {...props.input}/></CraftForm>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return <CraftForm {...props}><input placeholder={props.placeholder} {...props.input}/></CraftForm>\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Posts_post__u62A2\",\"post__img\":\"Posts_post__img__nFvZU\",\"post__content\":\"Posts_post__content__ebnN0\",\"post__likes\":\"Posts_post__likes__JG70o\"};","import React from 'react'\r\nimport PostsStyle from './Posts.module.css'\r\n\r\nexport const Posts = (props) => {\r\n  return (\r\n      <div className={PostsStyle.post}>\r\n          <img className={PostsStyle.post__img} src={props.profile.photos.large || \"https://flyclipart.com/thumb2/user-icon-png-pnglogocom-133466.png\"} alt=\"\" />\r\n        <div className={PostsStyle.post__content}>\r\n            <p className={PostsStyle.post__text}>\r\n                {props.text}\r\n            </p>\r\n            <div className={PostsStyle.post__likes}>\r\n                Likes: {props.likes}\r\n            </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile__userBlock\":\"Profile_profile__userBlock__oN9lz\",\"profile__img\":\"Profile_profile__img__yH7fn\",\"profile__userName\":\"Profile_profile__userName__DjBCb\",\"profile__userInfo\":\"Profile_profile__userInfo__z1fg5\",\"profile__userContent\":\"Profile_profile__userContent__Dyg4J\"};","import React, { useEffect, useState } from 'react'\r\n\r\nexport const ProfileStatus = (props) => {\r\n  let [editMode, setEitMode] = useState(false),\r\n    [status, setStatus] = useState(props.status)\r\n\r\n  const activate = () => {\r\n    setEitMode(true)\r\n  }\r\n  const deactivate = () => {\r\n    setEitMode(false)\r\n    props.updateUserStatus(status)\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  useEffect(\r\n    () => {setStatus(props.status)},\r\n    [props.status]\r\n  )\r\n  return (\r\n    <div>\r\n      {editMode && props.isOwner ?\r\n        <input\r\n          onChange={onStatusChange}\r\n          type=\"text\"\r\n          onBlur={() => deactivate()}\r\n          value={status}\r\n        /> :\r\n        <div\r\n          onDoubleClick={() => activate()}\r\n        >\r\n          {status}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Field, Form } from 'react-final-form'\r\n\r\nexport const ProfileInfo = ({ profile, ...props }) => {\r\n    let [profileEditMode, setProfileEditMode] = useState(false)\r\n    const activateProfileEditMode = () => {\r\n        setProfileEditMode(true)\r\n    }\r\n    const deactivateProfileEditMode = () => {\r\n        setProfileEditMode(false)\r\n    }\r\n    const onProfileInfoSubmit = (e) => {\r\n        console.log(e);\r\n        props.updateInfo(e);\r\n        deactivateProfileEditMode()\r\n    }\r\n    return (\r\n        <div>\r\n            {!profileEditMode ?\r\n                <div>\r\n                    <ul>\r\n                        <li>About Me: {profile.aboutMe || 'none'}</li>\r\n                        <li>Looking for a job: {profile.lookingForAJob}</li>\r\n                        {profile.lookingForAJob &&\r\n                            <li>Looking for a job description: {profile.lookingForAJobDescription}</li>}\r\n                        <li>Full name: {profile.fullName}</li>\r\n                        <ul>Contacts: {Object.keys(profile.contacts).map((obj) => {\r\n                            return (\r\n                                <li\r\n                                    key={obj}>\r\n                                    {obj}: {profile.contacts[obj] || 'none'}\r\n                                </li>\r\n                            )\r\n                        })}</ul>\r\n                    </ul>\r\n                    <div>\r\n                        {props.isOwner &&\r\n                        <button\r\n                            onClick={activateProfileEditMode}>\r\n                            Change profile info\r\n                        </button> }\r\n                    </div>\r\n                </div> :\r\n\r\n                <div>\r\n                    <Form\r\n                        onSubmit={onProfileInfoSubmit}>\r\n                        {({ handleSubmit }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div>\r\n                                    <Field\r\n                                        name=\"fullName\"\r\n                                        component=\"input\"\r\n                                        placeholder=\"Enter your Fullname\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    Looking for a job\r\n                                    <Field\r\n                                        name=\"lookingForAJob\"\r\n                                        component=\"input\"\r\n                                        type=\"checkbox\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <Field\r\n                                        name=\"lookingForAJobDescription\"\r\n                                        component=\"input\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    About me\r\n                                    <Field\r\n                                        name=\"aboutMe\"\r\n                                        component=\"input\"\r\n                                    />\r\n                                </div>\r\n                                <ul>\r\n                                    Contacts: {Object.keys(profile.contacts).map((obj) => {\r\n                                        return (\r\n                                            <li>{obj}\r\n                                                <Field\r\n                                                    name={`contacts.${obj}`}\r\n                                                    component=\"input\"\r\n                                                    placeholder={`Enter your ${obj} adress`}\r\n                                                />\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n                                <div>\r\n                                    <button type='submit'>\r\n                                        Save Changes\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                    </Form>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Posts } from './Posts/Posts';\r\nimport ProfileStyle from './Profile.module.css';\r\nimport { Preloader } from './../../Commons/Preloader'\r\nimport { ProfileStatus } from './ProfileStatus';\r\nimport { Field, Form } from 'react-final-form';\r\nimport { required, maxLengthCreator } from '../../Utils/Validators'\r\nimport { Input, TextArea } from '../../Commons/CraftForms';\r\nimport { ProfileInfo } from './ProfileInfo';\r\n\r\nexport const Profile = (props) => {\r\n  let postElements = props.postData.map(\r\n    post => <Posts\r\n      profile={props.profile}\r\n      id={post.id}\r\n      key={post.id}\r\n      likes={post.likes}\r\n      text={post.text} />)\r\n\r\n  const onPhotoSelect = (e) => {\r\n    props.savePhoto(e.target.files[0]);\r\n  }\r\n  const onSendMessage = (message) => {\r\n    props.sendMessage(props.profile.userId, message)\r\n  }\r\n  if (!props.profile) {\r\n    return (\r\n      <Preloader />\r\n    )\r\n  }\r\n  return (\r\n    <div className={ProfileStyle.profile}>\r\n      <div className={ProfileStyle.profile__body}>\r\n        <div className={ProfileStyle.profile__userBlock}>\r\n          <img className={ProfileStyle.profile__img}\r\n            src={!props.profile.photos.large ?\r\n              \"https://flyclipart.com/thumb2/user-icon-png-pnglogocom-133466.png\" :\r\n              props.profile.photos.large\r\n            }\r\n            alt=\"\" />\r\n          <div className={ProfileStyle.profile__userContent}>\r\n            <h1 className={ProfileStyle.profile__userName}>\r\n              {props.profile.fullName}\r\n            </h1>\r\n            <ProfileStatus\r\n              isOwner={props.isOwner}\r\n              status={props.status}\r\n              updateUserStatus={props.updateUserStatus} />\r\n            <ProfileInfo\r\n              isOwner={props.isOwner}\r\n              profile={props.profile}\r\n              updateInfo={props.updateInfo}\r\n            />\r\n\r\n            {/* Временно */}\r\n            {!props.isOwner && \r\n              <Form\r\n                onSubmit={onSendMessage}\r\n                render={({ handleSubmit }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                      <Field\r\n                        name=\"Message\"\r\n                        component={Input}\r\n                        placeholder=\"Message\"\r\n                      />\r\n                    </div>\r\n                    <button type='submit'>\r\n                      Send Message\r\n                    </button>\r\n                  </form>\r\n                )}\r\n              /> \r\n            }\r\n\r\n          </div>\r\n        </div>\r\n        {props.isOwner && <input type=\"file\" onChange={onPhotoSelect} />}\r\n        {props.isOwner &&\r\n          <div>\r\n            <PostForm {...props} />\r\n          </div>}\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst composeValidators = (...validators) => value =>\r\n  validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\nconst PostForm = (props) => {\r\n  let onSetPostClick = (postText) => {\r\n    props.addPost(postText.Post)\r\n    postText.Post = ''\r\n  }\r\n  return (\r\n    <Form\r\n      onSubmit={onSetPostClick}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <Field\r\n              name=\"Post\"\r\n              component={TextArea}\r\n              placeholder=\"Post\"\r\n              validate={composeValidators(required, maxLengthCreator(10))}\r\n            />\r\n          </div>\r\n          <button type='submit'>\r\n            Post\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n\r\n  )\r\n}","export const getPostData = (state) => {\r\n    return state.ProfilePage.PostData\r\n}\r\n\r\nexport const getPostNewText = (state) => {\r\n    return state.ProfilePage.postNewText\r\n}\r\n\r\nexport const getProfile = (state) => {\r\n    return state.ProfilePage.profile\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.ProfilePage.status\r\n}\r\n\r\nexport const getId = (state) => {\r\n    return state.Auth.id\r\n}\r\n\r\nexport const getMessagesData = (state) => {\r\n    return state.MessagesPage.MessagesData\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux';\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  addPost, setProfile, getUserId,\r\n  getUserStatus, updateUserStatus, savePhoto,\r\n  updateInfo\r\n} from '../../../Redux/ProfileReducer'\r\nimport { sendMessage, showMessages, startChatting } from '../../../Redux/MessageReducer'\r\nimport { Profile } from './Profile';\r\nimport {\r\n  getId, getMessagesData, getPostData,\r\n  getPostNewText, getProfile, getStatus\r\n} from '../../../Redux/Selectors';\r\n\r\n\r\nclass ProfileAPI extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    this.props.getUserId(userId)\r\n    this.props.getUserStatus(userId)\r\n    this.props.startChatting(userId)\r\n    this.props.showMessages(userId)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    let userId = this.props.router.params.userId;\r\n    if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n      this.props.getUserId(userId)\r\n      this.props.getUserStatus(userId)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={this.props.router.params.userId == this.props.selfId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        updateInfo={this.props.updateInfo}\r\n        MessagesData={this.props.MessagesData}\r\n        sendMessage={this.props.sendMessage} />\r\n    )\r\n  }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postData: getPostData(state),\r\n    postNewText: getPostNewText(state),\r\n    profile: getProfile(state),\r\n    status: getStatus(state),\r\n    selfId: getId(state),\r\n    MessagesData: getMessagesData(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addPost, setProfile, getUserId,\r\n    getUserStatus, updateUserStatus, savePhoto,\r\n    updateInfo, sendMessage, showMessages, startChatting\r\n  }),\r\n  withRouter,\r\n)(ProfileAPI)\r\n\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (MaxLength) => (value) => {\r\n    if (value && value.length > MaxLength) return `Max length is ${MaxLength}`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"CraftForm__input\":\"CraftForms_CraftForm__input__vFVJe\",\"CraftForm__error\":\"CraftForms_CraftForm__error__iaJ0q\",\"CraftForm__summaryEror\":\"CraftForms_CraftForm__summaryEror__i0YjD\",\"CraftForm__blockInput\":\"CraftForms_CraftForm__blockInput__SNOix\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["CraftForm","input","meta","props","child","hasError","touched","error","className","CraftFormsStyle","children","TextArea","placeholder","Input","Posts","PostsStyle","src","profile","photos","large","alt","text","likes","ProfileStatus","useState","editMode","setEitMode","status","setStatus","useEffect","isOwner","onChange","e","currentTarget","value","type","onBlur","updateUserStatus","onDoubleClick","ProfileInfo","profileEditMode","setProfileEditMode","onSubmit","console","log","updateInfo","handleSubmit","name","component","Object","keys","contacts","map","obj","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","onClick","Profile","postElements","postData","post","id","ProfileStyle","message","sendMessage","userId","render","savePhoto","target","files","PostForm","Preloader","composeValidators","validators","reduce","validator","undefined","postText","addPost","Post","validate","required","maxLengthCreator","getPostData","state","ProfilePage","PostData","getPostNewText","postNewText","getProfile","getStatus","getId","Auth","getMessagesData","MessagesPage","MessagesData","ProfileAPI","this","router","params","getUserId","getUserStatus","startChatting","showMessages","prevProps","selfId","React","compose","connect","setProfile","Component","location","useLocation","navigate","useNavigate","useParams","MaxLength","length","_objectWithoutProperties","source","excluded","key","i","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}