{"version":3,"file":"static/js/900.7e173561.chunk.js","mappings":"oRACA,EAA+B,gCAA/B,EAA4E,8B,SCS/DA,EAAiC,SAAC,GAG3C,IAHiH,IAApEC,EAAmE,EAAnEA,gBAAiBC,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,aACzFC,EAAaC,KAAKC,KAAKN,EAAkBC,GACzCM,EAAuB,GAClBC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAEX,OACoCE,EAAAA,EAAAA,UAAS,GAD7C,eACCC,EADD,KACgBC,EADhB,KAEAC,EAAeb,EAFD,GAGdc,EAHc,IAGOH,EAAgB,GAAmB,EACxDI,EAJc,GAIqBJ,EAEvC,OACI,2BACMA,EAAgB,IACd,mBACIK,QAAS,WACLJ,EAAiBD,EAAgB,IAFzC,kBAKHJ,EACIU,QAAO,SAAAC,GAAO,OAAIJ,GAAqBI,GAAWA,GAAWH,KAC7DI,KAAI,SAAAD,GAAO,OACR,iBAEIE,UAAWlB,IAAsBgB,EAC7BG,EACAA,EACJL,QAAS,WACLb,EAAae,IANrB,SASKA,GARIA,MAWfP,EAAgBN,KAAKiB,MAAMT,KACzB,mBACIG,QAAS,WACLJ,EAAiBD,EAAgB,IAFzC,sB,UCxCHY,EAAkCC,EAAAA,MAAW,SAAAC,GAkBtD,OACI,0BACI,SAAC,KAAD,CACIC,cAf8B,CACtCC,KAAM,GACNC,QAAS,OAcDC,SAZG,SAACC,EAAD,GAAwG,IAAzEC,EAAwE,EAAxEA,cACpCC,EAAiB,CACnBL,KAAMG,EAAOH,KACbC,QAA4B,QAAnBE,EAAOF,QAAoB,KAA0B,aAAnBE,EAAOF,SAEtDH,EAAMQ,eAAeD,GACrBD,GAAc,IAIV,SAIK,gBAAGG,EAAH,EAAGA,aAAH,OACG,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,UACxB,UAAC,KAAD,CAAOC,GAAG,SAASD,KAAK,UAAxB,WACI,mBAAQE,MAAM,MAAd,kBACA,mBAAQA,MAAM,WAAd,uBACA,mBAAQA,MAAM,aAAd,4BAEJ,mBAAQH,KAAK,SAASI,SAAUL,EAAhC,+B,UCrCxB,GAAgB,WAAa,yBAAyB,gBAAkB,8BAA8B,UAAY,wBAAwB,WAAa,yBAAyB,aAAe,2BAA2B,aAAe,2BAA2B,WAAa,0BCWpQM,EAA4B,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,oBAAqBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC7E,OACI,iBACIxB,UAAWyB,EAAAA,WADf,WAGI,iBAAKzB,UAAWyB,EAAAA,gBAAhB,WACI,SAAC,KAAD,CAASC,GAAE,mBAAcL,EAAKM,IAA9B,UACI,gBAAK3B,UAAWyB,EAAAA,UACZG,IACyB,MAArBP,EAAKQ,OAAOC,MACRT,EAAKQ,OAAOC,MACZ,yEAGhB,iBAAK9B,UAAWyB,EAAAA,cAAhB,WACI,gBAAKzB,UAAWyB,EAAAA,WAAhB,UACI,SAAC,KAAD,CAASzB,UAAWyB,EAAAA,WAAsBC,GAAE,mBAAcL,EAAKM,IAA/D,SACKN,EAAKL,UAGd,eAAGhB,UAAWyB,EAAAA,aAAd,UACKJ,EAAKU,OACLV,EAAKM,aAIlB,yBACKN,EAAKW,UACF,mBACIhC,UAAWyB,EAAAA,aACXN,SAAUG,EAAoBW,MAAK,SAAAN,GAAE,OAAIA,IAAON,EAAKM,MACrD/B,QAAS,WACL2B,EAASF,EAAKM,KAJtB,uBAUA,mBACI3B,UAAWyB,EAAAA,aACXN,SAAUG,EAAoBW,MAAK,SAAAN,GAAE,OAAIA,IAAON,EAAKM,MACrD/B,QAAS,WACL4B,EAAOH,EAAKM,KAJpB,wBAlCHN,EAAKM,KCGTO,EAA6B,SAAC7B,GAEzC,OACE,4BACE,SAACF,EAAD,CACEU,eAAgBR,EAAMQ,kBAExB,SAAClC,EAAD,CACEC,gBAAiByB,EAAMzB,gBACvBC,WAAYwB,EAAMxB,WAClBC,kBAAmBuB,EAAMvB,kBACzBC,aAAcsB,EAAMtB,eACrBsB,EAAM8B,UAAUpC,KAAI,SAAAsB,GAAI,OACvB,SAACD,EAAD,CACEC,KAAMA,EAENC,oBAAqBjB,EAAMiB,oBAC3BC,SAAUlB,EAAMkB,SAChBC,OAAQnB,EAAMmB,QAHTH,EAAKM,W,8BCIPS,EAAb,gMAMErD,aAAe,SAACe,GACd,MAA+B,EAAKO,MAA5BxB,EAAR,EAAQA,WAAYgB,EAApB,EAAoBA,OACpB,EAAKQ,MAAMgC,WAAWvC,EAASjB,EAAYgB,EAAOU,KAAMV,EAAOW,UARnE,EAWEK,eAAiB,SAAChB,GAChB,IAAQhB,EAAe,EAAKwB,MAApBxB,WACR,EAAKwB,MAAMgC,WAAW,EAAGxD,EAAYgB,EAAOU,KAAMV,EAAOW,SACzD,EAAKH,MAAMiC,SAAS,EAAGzD,EAAYgB,EAAOU,KAAMV,EAAOW,UAd3D,kDACE,WACE,MAAkD+B,KAAKlC,MAA/CvB,EAAR,EAAQA,kBAAmBD,EAA3B,EAA2BA,WAAYgB,EAAvC,EAAuCA,OACvC0C,KAAKlC,MAAMiC,SAASxD,EAAmBD,EAAYgB,EAAOU,KAAMV,EAAOW,WAH3E,oBAiBE,WACE,OACE,iCACE,SAAC0B,EAAD,CACEC,UAAWI,KAAKlC,MAAM8B,UACtBvD,gBAAiB2D,KAAKlC,MAAMzB,gBAC5BE,kBAAmByD,KAAKlC,MAAMvB,kBAC9BD,WAAY0D,KAAKlC,MAAMxB,WACvBE,aAAcwD,KAAKxD,aACnB8B,eAAgB0B,KAAK1B,eACrBW,OAAQe,KAAKlC,MAAMmB,OACnBD,SAAUgB,KAAKlC,MAAMkB,SACrBD,oBAAqBiB,KAAKlC,MAAMiB,oBAChCzB,OAAQ0C,KAAKlC,MAAMR,OACnB2C,UAAWD,KAAKlC,MAAMmC,UACtBF,SAAUC,KAAKlC,MAAMiC,WAEtBC,KAAKlC,MAAMoC,YAAa,SAACC,EAAA,EAAD,IAAgB,YAlCjD,GAAoCtC,EAAAA,WAqDpC,GAAeuC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAboB,SAACC,GACrB,MAAO,CACLV,UAAWU,EAAMC,UAAUX,UAC3BvD,gBAAiBiE,EAAMC,UAAUlE,gBACjCE,kBAAmB+D,EAAMC,UAAUhE,kBACnCD,WAAYgE,EAAMC,UAAUjE,WAC5B4D,WAAYI,EAAMC,UAAUL,WAC5BnB,oBAAqBuB,EAAMC,UAAUxB,oBACrCzB,OAAQgD,EAAMC,UAAUjD,WAKnB,QAAC,UAEDkD,EAAAA,IAFA,IAGHvB,OAAAA,EAAAA,GAAQD,SAAAA,EAAAA,GACRe,SAAAA,EAAAA,GAAUD,WAAAA,EAAAA,MAEdW,EAAAA,EAPF,CAQEZ,I,sIC9FEa,EAA6B,SAACJ,GAAD,MAA0B,CACvDK,aAAcL,EAAMM,KAAKD,eAMtB,SAASF,EAAsBI,GAclC,OADqCR,EAAAA,EAAAA,IAAQK,EAARL,EAZa,SAACvC,GACXA,EAA9B6C,aAAN,IAAuBG,GAAvB,OAAoChD,EAApC,GACA,OAAIA,EAAM6C,cAEF,SAACE,GAAD,UAAsBC,KAItB,SAAC,KAAD,CAAU3B,GAAG","sources":["webpack://project/./src/Components/Content/Users/Paginator/Paginator.module.css?a9d4","Components/Content/Users/Paginator/Paginator.tsx","Components/Content/Users/SearchForm/SerchForm.tsx","webpack://project/./src/Components/Content/Users/User/User.module.css?a9b6","Components/Content/Users/User/User.tsx","Components/Content/Users/Users.tsx","Components/Content/Users/UsersContainer.tsx","Components/HOC/AuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__7lLd8\",\"normalPage\":\"Paginator_normalPage__tp5v9\",\"ArrowButton\":\"Paginator_ArrowButton__zcvWf\",\"Arrow\":\"Paginator_Arrow__RVlDP\",\"ArrowRev\":\"Paginator_ArrowRev__xmDfJ\"};","import React, { useState } from 'react'\r\n//@ts-ignore\r\nimport PaginatorStyle from './Paginator.module.css'\r\n\r\ntype propsType = {\r\n    totalUsersCount: number\r\n    usersCount: number\r\n    currentPageNumber: number\r\n    onPageChange: (pageNum: number) => void\r\n}\r\nexport const Paginator: React.FC<propsType> = ({ totalUsersCount, usersCount, currentPageNumber, onPageChange }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / usersCount),\r\n        pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionSize = 10,\r\n        [portionNumber, setPortionNumber] = useState(1),\r\n        portionCount = totalUsersCount / portionSize,\r\n        leftPortionNumber = (portionNumber - 1) * portionSize + 1,\r\n        rightPortionNumber = portionSize * portionNumber\r\n\r\n    return (\r\n        <div>\r\n            {(portionNumber > 1) &&\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber - 1)\r\n                    }}>Prev</button>}\r\n\r\n            {pages\r\n                .filter(pageNum => leftPortionNumber <= pageNum && pageNum <= rightPortionNumber)\r\n                .map(pageNum =>\r\n                    <span\r\n                        key={pageNum}\r\n                        className={currentPageNumber === pageNum ?\r\n                            PaginatorStyle.selectedPage :\r\n                            PaginatorStyle.normalPage}\r\n                        onClick={() => {\r\n                            onPageChange(pageNum)\r\n                        }}\r\n                    >\r\n                        {pageNum}\r\n                    </span>)}\r\n\r\n            {(portionNumber < Math.round(portionCount)) &&\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber + 1)\r\n                    }}>\r\n                    Next\r\n                </button>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { filterType } from '../../../../Types/ReducersTypes';\r\ntype propsType = {\r\n    onFilterChange: (filter: filterType) => void\r\n}\r\nexport const SearchForm: React.FC<propsType> = React.memo(props => {\r\n    \r\n    type specificFilterType = {\r\n        term: string\r\n        friends: \"All\" | \"Followed\" | \"Unfollowed\"\r\n    }\r\n    const initialValues: specificFilterType = {\r\n        term: '',\r\n        friends: \"All\"\r\n    }\r\n    const submit = (values: specificFilterType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filteredValues = {\r\n            term: values.term,\r\n            friends: values.friends === \"All\" ? null : values.friends === \"Followed\" ? true : false\r\n        }\r\n        props.onFilterChange(filteredValues);\r\n        setSubmitting(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={submit}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\" />\r\n                        <Field as=\"select\" name=\"friends\">\r\n                            <option value=\"All\">All</option>\r\n                            <option value=\"Followed\">Followed</option>\r\n                            <option value=\"Unfollowed\">Unfollowed</option>\r\n                        </Field>\r\n                        <button type=\"submit\" disabled={isSubmitting}>Submit</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             term: '',\r\n//             friends: null as null | boolean\r\n//         },\r\n//         onSubmit: (values: filterType) => {\r\n//             // alert(JSON.stringify(values, null, 2));\r\n//             console.log(values);\r\n//         },\r\n//     });\r\n//     return (\r\n//         <form onSubmit={formik.handleSubmit}>\r\n//             <input\r\n//                 name=\"search\"\r\n//                 onChange={formik.handleChange}\r\n//                 value={formik.values.term}\r\n//             />\r\n//             <input\r\n//                 type=\"checkbox\"\r\n//                 value={formik.values.friends}\r\n//             />\r\n//             <button type=\"submit\">Submit</button>\r\n//         </form>\r\n//     );\r\n// };","// extracted by mini-css-extract-plugin\nexport default {\"User__body\":\"User_User__body__1rMOJ\",\"User__container\":\"User_User__container__RFipw\",\"User__img\":\"User_User__img__3K6Do\",\"User__name\":\"User_User__name__6PEMq\",\"User__status\":\"User_User__status__03rRS\",\"User__button\":\"User_User__button__bLfC+\",\"User__link\":\"User_User__link__Zkiok\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UsersDataType } from '../../../../Types/ReducersTypes'\r\n//@ts-ignore\r\nimport UserStyle from './User.module.css'\r\n\r\ntype propsType = {\r\n    user: UsersDataType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\nexport const User: React.FC<propsType> = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div\r\n            className={UserStyle.User__body}\r\n            key={user.id}>\r\n            <div className={UserStyle.User__container}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={UserStyle.User__img}\r\n                        src={\r\n                            user.photos.small != null ?\r\n                                user.photos.small :\r\n                                \"https://flyclipart.com/thumb2/user-icon-png-pnglogocom-133466.png\"}\r\n                    />\r\n                </NavLink>\r\n                <div className={UserStyle.User__content}>\r\n                    <div className={UserStyle.User__name}>\r\n                        <NavLink className={UserStyle.User__link} to={`/profile/${user.id}`}>\r\n                            {user.name}\r\n                        </NavLink>\r\n                    </div>\r\n                    <p className={UserStyle.User__status}>\r\n                        {user.status}\r\n                        {user.id}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {user.followed ?\r\n                    <button\r\n                        className={UserStyle.User__button}\r\n                        disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}\r\n                    >\r\n                        Unfollow\r\n                    </button>\r\n                    :\r\n                    <button\r\n                        className={UserStyle.User__button}\r\n                        disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                            follow(user.id)\r\n\r\n                        }}\r\n                    >\r\n                        Follow\r\n                    </button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { filterType, UsersDataType } from '../../../Types/ReducersTypes';\r\nimport { Paginator } from './Paginator/Paginator';\r\nimport { SearchForm } from './SearchForm/SerchForm';\r\nimport { User } from './User/User';\r\n\r\ntype propsType = {\r\n  UsersData: Array<UsersDataType>\r\n  totalUsersCount: number\r\n  usersCount: number\r\n  currentPageNumber: number\r\n  filter: filterType\r\n  followingInProgress: Array<number>\r\n  getUsers: (currentPageNumber: number, usersCount: number, term: string | null, friends: boolean | null) => void\r\n  setFilter: (term: string | null, friends: boolean | null) => void\r\n  onFilterChange: (filter: filterType) => void\r\n  onPageChange: (pageNum: number) => void\r\n  unfollow: (userId: number) => void\r\n  follow: (userId: number) => void\r\n}\r\nexport const Users: React.FC<propsType> = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm\r\n        onFilterChange={props.onFilterChange}\r\n      />\r\n      <Paginator\r\n        totalUsersCount={props.totalUsersCount}\r\n        usersCount={props.usersCount}\r\n        currentPageNumber={props.currentPageNumber}\r\n        onPageChange={props.onPageChange} />\r\n      {props.UsersData.map(user =>\r\n        <User\r\n          user={user}\r\n          key={user.id}\r\n          followingInProgress={props.followingInProgress}\r\n          unfollow={props.unfollow}\r\n          follow={props.follow} />\r\n      )}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {\r\n  follow, unfollow,\r\n  actions,\r\n  getUsers, pageChange\r\n} from '../../../Redux/UsersReducer';\r\nimport { connect } from 'react-redux';\r\nimport { Users } from './Users';\r\nimport { Preloader } from '../../Commons/Preloader';\r\nimport { withAuthRedirect } from '../../HOC/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { filterType, UsersDataType } from '../../../Types/ReducersTypes';\r\nimport { appStateType } from '../../../Redux/ReduxStore';\r\n\r\ntype mapStateToPropsType = {\r\n  UsersData: Array<UsersDataType>\r\n  totalUsersCount: number\r\n  currentPageNumber: number\r\n  usersCount: number\r\n  isFetching: boolean\r\n  followingInProgress: Array<number>\r\n  filter: filterType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n  setUsers: () => void\r\n  setPages: () => void\r\n  setTotalUsersCount: () => void\r\n  setFilter: (term: string | null, friends: boolean | null) => void\r\n  toggleIsFetching: () => void\r\n  getUsers: (currentPageNumber: number, usersCount: number, term: string | null, friends: boolean | null) => void\r\n  pageChange: (pageNum: number, usersCount: number, term: string | null, friends: boolean | null) => void\r\n}\r\n\r\nexport type propsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nexport class UsersContainer extends React.Component<propsType> {\r\n  componentDidMount() {\r\n    const { currentPageNumber, usersCount, filter } = this.props\r\n    this.props.getUsers(currentPageNumber, usersCount, filter.term, filter.friends)\r\n  }\r\n\r\n  onPageChange = (pageNum: number) => {\r\n    const { usersCount, filter } = this.props\r\n    this.props.pageChange(pageNum, usersCount, filter.term, filter.friends)\r\n  }\r\n\r\n  onFilterChange = (filter: filterType) => {\r\n    const { usersCount } = this.props\r\n    this.props.pageChange(1, usersCount, filter.term, filter.friends)\r\n    this.props.getUsers(1, usersCount, filter.term, filter.friends)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Users\r\n          UsersData={this.props.UsersData}\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          currentPageNumber={this.props.currentPageNumber}\r\n          usersCount={this.props.usersCount}\r\n          onPageChange={this.onPageChange}\r\n          onFilterChange={this.onFilterChange}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          followingInProgress={this.props.followingInProgress}\r\n          filter={this.props.filter}\r\n          setFilter={this.props.setFilter}\r\n          getUsers={this.props.getUsers}\r\n        />\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: appStateType): mapStateToPropsType => {\r\n  return {\r\n    UsersData: state.UsersPage.UsersData,\r\n    totalUsersCount: state.UsersPage.totalUsersCount,\r\n    currentPageNumber: state.UsersPage.currentPageNumber,\r\n    usersCount: state.UsersPage.usersCount,\r\n    isFetching: state.UsersPage.isFetching,\r\n    followingInProgress: state.UsersPage.followingInProgress,\r\n    filter: state.UsersPage.filter\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps,\r\n    {\r\n      ...actions,\r\n      follow, unfollow,\r\n      getUsers, pageChange\r\n    }),\r\n  withAuthRedirect\r\n)(UsersContainer)\r\n","import React, { ComponentType } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { appStateType } from '../../Redux/ReduxStore'\r\n\r\nlet mapStateToPropsForRedirect = (state: appStateType) => ({\r\n    isAuthorised: state.Auth.isAuthorised\r\n})\r\n\r\ntype mapPropsType = {\r\n    isAuthorised: boolean | null\r\n}\r\nexport function withAuthRedirect<WCP>(WrappedComponent: ComponentType<WCP>) {\r\n    const RedirectComponent: React.FC<mapPropsType> = (props) => {\r\n        let { isAuthorised, ...restProps} = props\r\n        if (props.isAuthorised) {\r\n            return (\r\n                <WrappedComponent {...restProps as WCP} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Navigate to='/login' />\r\n            )\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["Paginator","totalUsersCount","usersCount","currentPageNumber","onPageChange","pagesCount","Math","ceil","pages","i","push","useState","portionNumber","setPortionNumber","portionCount","leftPortionNumber","rightPortionNumber","onClick","filter","pageNum","map","className","PaginatorStyle","round","SearchForm","React","props","initialValues","term","friends","onSubmit","values","setSubmitting","filteredValues","onFilterChange","isSubmitting","type","name","as","value","disabled","User","user","followingInProgress","unfollow","follow","UserStyle","to","id","src","photos","small","status","followed","some","Users","UsersData","UsersContainer","pageChange","getUsers","this","setFilter","isFetching","Preloader","compose","connect","state","UsersPage","actions","withAuthRedirect","mapStateToPropsForRedirect","isAuthorised","Auth","WrappedComponent","restProps"],"sourceRoot":""}