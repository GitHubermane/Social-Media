{"version":3,"file":"static/js/900.01f01b41.chunk.js","mappings":"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","sources":["webpack://project/./src/Components/Content/Users/Paginator/Paginator.module.css?a9d4","Components/Content/Users/Paginator/Paginator.tsx","Components/Content/Users/SearchForm/SerchForm.tsx","webpack://project/./src/Components/Content/Users/User/User.module.css?a9b6","Components/Content/Users/User/User.tsx","Components/Content/Users/Users.tsx","Components/Content/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__7lLd8\",\"normalPage\":\"Paginator_normalPage__tp5v9\",\"ArrowButton\":\"Paginator_ArrowButton__zcvWf\",\"Arrow\":\"Paginator_Arrow__RVlDP\",\"ArrowRev\":\"Paginator_ArrowRev__xmDfJ\"};","import React, { useState } from 'react'\r\n//@ts-ignore\r\nimport PaginatorStyle from './Paginator.module.css'\r\n\r\ntype propsType = {\r\n    totalUsersCount: number\r\n    usersCount: number\r\n    currentPageNumber: number\r\n    onPageChange: (pageNum: number) => void\r\n}\r\nexport const Paginator: React.FC<propsType> = ({ totalUsersCount, usersCount, currentPageNumber, onPageChange }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / usersCount),\r\n        pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionSize = 10,\r\n        [portionNumber, setPortionNumber] = useState(1),\r\n        portionCount = totalUsersCount / portionSize,\r\n        leftPortionNumber = (portionNumber - 1) * portionSize + 1,\r\n        rightPortionNumber = portionSize * portionNumber\r\n\r\n    return (\r\n        <div>\r\n            {(portionNumber > 1) &&\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber - 1)\r\n                    }}>Prev</button>}\r\n\r\n            {pages\r\n                .filter(pageNum => leftPortionNumber <= pageNum && pageNum <= rightPortionNumber)\r\n                .map(pageNum =>\r\n                    <span\r\n                        key={pageNum}\r\n                        className={currentPageNumber === pageNum ?\r\n                            PaginatorStyle.selectedPage :\r\n                            PaginatorStyle.normalPage}\r\n                        onClick={() => {\r\n                            onPageChange(pageNum)\r\n                        }}\r\n                    >\r\n                        {pageNum}\r\n                    </span>)}\r\n\r\n            {(portionNumber < Math.round(portionCount)) &&\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber + 1)\r\n                    }}>\r\n                    Next\r\n                </button>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { filterType } from '../../../../Types/ReducersTypes';\r\ntype propsType = {\r\n    onFilterChange: (filter: filterType) => void\r\n}\r\nexport const SearchForm: React.FC<propsType> = React.memo(props => {\r\n    \r\n    type specificFilterType = {\r\n        term: string\r\n        friends: \"All\" | \"Followed\" | \"Unfollowed\"\r\n    }\r\n    const initialValues: specificFilterType = {\r\n        term: '',\r\n        friends: \"All\"\r\n    }\r\n    const submit = (values: specificFilterType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filteredValues = {\r\n            term: values.term,\r\n            friends: values.friends === \"All\" ? null : values.friends === \"Followed\" ? true : false\r\n        }\r\n        props.onFilterChange(filteredValues);\r\n        setSubmitting(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={submit}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\" />\r\n                        <Field as=\"select\" name=\"friends\">\r\n                            <option value=\"All\">All</option>\r\n                            <option value=\"Followed\">Followed</option>\r\n                            <option value=\"Unfollowed\">Unfollowed</option>\r\n                        </Field>\r\n                        <button type=\"submit\" disabled={isSubmitting}>Submit</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             term: '',\r\n//             friends: null as null | boolean\r\n//         },\r\n//         onSubmit: (values: filterType) => {\r\n//             // alert(JSON.stringify(values, null, 2));\r\n//             console.log(values);\r\n//         },\r\n//     });\r\n//     return (\r\n//         <form onSubmit={formik.handleSubmit}>\r\n//             <input\r\n//                 name=\"search\"\r\n//                 onChange={formik.handleChange}\r\n//                 value={formik.values.term}\r\n//             />\r\n//             <input\r\n//                 type=\"checkbox\"\r\n//                 value={formik.values.friends}\r\n//             />\r\n//             <button type=\"submit\">Submit</button>\r\n//         </form>\r\n//     );\r\n// };","// extracted by mini-css-extract-plugin\nexport default {\"User__body\":\"User_User__body__1rMOJ\",\"User__container\":\"User_User__container__RFipw\",\"User__img\":\"User_User__img__3K6Do\",\"User__name\":\"User_User__name__6PEMq\",\"User__status\":\"User_User__status__03rRS\",\"User__button\":\"User_User__button__bLfC+\",\"User__link\":\"User_User__link__Zkiok\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UsersDataType } from '../../../../Types/ReducersTypes'\r\n//@ts-ignore\r\nimport UserStyle from './User.module.css'\r\n\r\ntype propsType = {\r\n    user: UsersDataType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\nexport const User: React.FC<propsType> = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div\r\n            className={UserStyle.User__body}\r\n            key={user.id}>\r\n            <div className={UserStyle.User__container}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={UserStyle.User__img}\r\n                        src={\r\n                            user.photos.small != null ?\r\n                                user.photos.small :\r\n                                \"https://flyclipart.com/thumb2/user-icon-png-pnglogocom-133466.png\"}\r\n                    />\r\n                </NavLink>\r\n                <div className={UserStyle.User__content}>\r\n                    <div className={UserStyle.User__name}>\r\n                        <NavLink className={UserStyle.User__link} to={`/profile/${user.id}`}>\r\n                            {user.name}\r\n                        </NavLink>\r\n                    </div>\r\n                    <p className={UserStyle.User__status}>\r\n                        {user.status}\r\n                        {user.id}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {user.followed ?\r\n                    <button\r\n                        className={UserStyle.User__button}\r\n                        disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}\r\n                    >\r\n                        Unfollow\r\n                    </button>\r\n                    :\r\n                    <button\r\n                        className={UserStyle.User__button}\r\n                        disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                            follow(user.id)\r\n\r\n                        }}\r\n                    >\r\n                        Follow\r\n                    </button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { appStateType } from '../../../Redux/ReduxStore';\r\nimport { getUsers, pageChange } from '../../../Redux/UsersReducer';\r\nimport { filterType } from '../../../Types/ReducersTypes';\r\nimport { Paginator } from './Paginator/Paginator';\r\nimport { SearchForm } from './SearchForm/SerchForm';\r\nimport { User } from './User/User';\r\n\r\ntype propsType = {\r\n}\r\nexport const Users: React.FC<propsType> = (props) => {\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers(currentPageNumber, usersCount, filter.term, filter.friends))\r\n\r\n  },[])\r\n\r\n  const UsersData = useSelector((state: appStateType) => state.UsersPage.UsersData),\r\n    totalUsersCount = useSelector((state: appStateType) => state.UsersPage.totalUsersCount),\r\n    currentPageNumber = useSelector((state: appStateType) => state.UsersPage.currentPageNumber),\r\n    usersCount = useSelector((state: appStateType) => state.UsersPage.usersCount),\r\n    followingInProgress = useSelector((state: appStateType) => state.UsersPage.followingInProgress),\r\n    filter = useSelector((state: appStateType) => state.UsersPage.filter)\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const onPageChange = (pageNum: number) => {\r\n    dispatch(pageChange(pageNum, usersCount, filter.term, filter.friends))\r\n  },\r\n    onFilterChange = (filter: filterType) => {\r\n      dispatch(pageChange(1, usersCount, filter.term, filter.friends))\r\n      dispatch(getUsers(1, usersCount, filter.term, filter.friends))\r\n    },\r\n    follow = (userId: number) => {\r\n      dispatch(follow(userId))\r\n    },\r\n    unfollow = (userId: number) => {\r\n      dispatch(unfollow(userId))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm\r\n        onFilterChange={onFilterChange}\r\n      />\r\n      <Paginator\r\n        totalUsersCount={totalUsersCount}\r\n        usersCount={usersCount}\r\n        currentPageNumber={currentPageNumber}\r\n        onPageChange={onPageChange} />\r\n      {UsersData.map(user =>\r\n        <User\r\n          user={user}\r\n          key={user.id}\r\n          followingInProgress={followingInProgress}\r\n          unfollow={unfollow}\r\n          follow={follow} />\r\n      )}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Users } from './Users';\r\nimport { Preloader } from '../../Commons/Preloader';\r\nimport { appStateType } from '../../../Redux/ReduxStore';\r\n\r\nexport type propsType = {}\r\nexport const UsersContainer:React.FC<propsType> = (props) => {\r\n  const isFetching = useSelector((state: appStateType) => state.UsersPage.isFetching)\r\n    return (\r\n      <>\r\n        {isFetching ? <Preloader /> : null}\r\n        <Users/>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default UsersContainer"],"names":["Paginator","totalUsersCount","usersCount","currentPageNumber","onPageChange","pagesCount","Math","ceil","pages","i","push","useState","portionNumber","setPortionNumber","portionCount","leftPortionNumber","rightPortionNumber","onClick","filter","pageNum","map","className","PaginatorStyle","round","SearchForm","React","props","initialValues","term","friends","onSubmit","values","setSubmitting","filteredValues","onFilterChange","isSubmitting","type","name","as","value","disabled","User","user","followingInProgress","unfollow","follow","UserStyle","to","id","src","photos","small","status","followed","some","Users","useEffect","dispatch","getUsers","UsersData","useSelector","state","UsersPage","useDispatch","userId","pageChange","UsersContainer","isFetching","Preloader"],"sourceRoot":""}