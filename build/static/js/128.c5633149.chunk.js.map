{"version":3,"file":"static/js/128.c5633149.chunk.js","mappings":"wOACA,GAAgB,aAAe,8BAA8B,cAAgB,+BAA+B,kBAAoB,mCAAmC,eAAiB,gCAAgC,gBAAkB,kCCAtO,EAA0B,0B,SCCbA,EAAW,SAACC,GACvB,OACE,0BACE,cAAGC,UAAWC,EAAd,SAAsCF,EAAMG,U,UCJlD,EAA6B,0BCGhBC,EAAQ,SAACJ,GACpB,OACE,SAAC,KAAD,CAASK,GAAE,UAAKL,EAAMM,IAAML,UAAWM,EAAvC,SACGP,EAAMQ,QCDAC,EAAU,SAACT,GACtB,IAAIU,EAAkBV,EAAMW,gBAAgBC,KAC1C,SAAAC,GAAM,OAAI,SAACT,EAAD,CACRE,GAAIO,EAAOP,GAEXE,KAAMK,EAAOL,MADRK,EAAOP,OAGZQ,EAAkBd,EAAMe,aAAaH,KACvC,SAAAI,GAAO,OAAI,SAACjB,EAAD,CACTO,GAAIU,EAAQV,GAEZH,KAAMa,EAAQb,MADTa,EAAQV,OAGjB,OACE,iBAAKL,UAAWgB,EAAAA,aAAhB,WACE,gBAAKhB,UAAWgB,EAAAA,WAAhB,SACGP,KAEH,iBAAKT,UAAWgB,EAAAA,cAAhB,UACGH,GACD,SAACI,GAAD,UAAiBlB,WAOZkB,EAAc,SAAClB,GAK1B,OACE,SAAC,KAAD,CACEmB,SANqB,SAACC,GACxBpB,EAAMqB,YAAYD,EAAYE,SAC9BF,EAAYE,QAAU,IAGtB,SAEG,gBAAGC,EAAH,EAAGA,aAAH,OACC,kBACEtB,UAAWgB,EAAAA,kBACXE,SAAUI,EAFZ,WAGE,0BACE,SAAC,KAAD,CACEtB,UAAWgB,EAAAA,eACXT,KAAK,UACLgB,UAAU,QACVC,YAAY,kBAGhB,mBACExB,UAAWgB,EAAAA,gBACXS,KAAK,SAFP,UAGE,gBAAKC,IAAI,qFAAqFC,IAAI,c,6BCjDxGC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAcH,OAdGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACJ,WACEC,KAAK9B,MAAM+B,eACZ,oBACD,WAEE,OACE,SAACtB,EAAD,CACEE,gBAAiBmB,KAAK9B,MAAMW,gBAC5BI,aAAce,KAAK9B,MAAMe,aACzBM,YAAaS,KAAK9B,MAAMqB,kBAI7B,EAdGQ,CAAyBG,EAAAA,WA0B/B,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KARoB,SAACC,GACrB,MAAO,CACLxB,gBAAiBwB,EAAMC,aAAazB,gBACpCI,aAAcoB,EAAMC,aAAaC,gBAKV,CAAEhB,YAAAA,EAAAA,GAAaU,WAAAA,EAAAA,KACxCO,EAAAA,EAFF,CAGET,I,iJChCEU,EAA6B,SAACJ,GAAD,MAAY,CACrCK,aAAcL,EAAMM,KAAKD,eAGpBF,EAAmB,SAACI,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIb,KAAK9B,MAAMwC,cAEP,SAACE,GAAD,UAAeZ,KAAK9B,SAIpB,SAAC,KAAD,CAAUK,GAAG,eATc,GACX2B,EAAAA,WAchC,OADqCE,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS","sources":["webpack://project/./src/Components/Content/Dialogs/Dialogs.module.css?1178","webpack://project/./src/Components/Content/Dialogs/Messages/Messages.module.css?4f82","Components/Content/Dialogs/Messages/Messages.jsx","webpack://project/./src/Components/Content/Dialogs/Users/Users.module.css?78c1","Components/Content/Dialogs/Users/Users.jsx","Components/Content/Dialogs/Dialogs.jsx","Components/Content/Dialogs/DialogsContainer.jsx","Components/HOC/AuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsBlock\":\"Dialogs_dialogsBlock__L0XYu\",\"messagesBlock\":\"Dialogs_messagesBlock__+cZuH\",\"messageInputBlock\":\"Dialogs_messageInputBlock__AOo+g\",\"message__input\":\"Dialogs_message__input__MOitd\",\"message__button\":\"Dialogs_message__button__jy2Un\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Messages_message__AgKcB\"};","import React from 'react'\r\nimport MessagesStyle from './Messages.module.css'\r\nexport const Messages = (props) => {\r\n  return (\r\n    <div>\r\n      <p className={MessagesStyle.message}>{props.text}</p>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user__item\":\"Users_user__item__teNyi\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport UsersStyle from './Users.module.css'\r\n\r\nexport const Users = (props) => {\r\n  return (\r\n    <NavLink to={`${props.id}`} className={UsersStyle.user__item}>\r\n      {props.name}\r\n    </NavLink>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Field, Form } from 'react-final-form';\r\nimport DialogsStyle from './Dialogs.module.css';\r\nimport { Messages } from './Messages/Messages';\r\nimport { Users } from './Users/Users';\r\n\r\nexport const Dialogs = (props) => {\r\n  let UserChatElement = props.UserMessageData.map(\r\n    dialog => <Users\r\n      id={dialog.id}\r\n      key={dialog.id}\r\n      name={dialog.name} />)\r\n\r\n  let MessagesElement = props.messagesData.map(\r\n    message => <Messages\r\n      id={message.id}\r\n      key={message.id}\r\n      text={message.text} />)\r\n\r\n  return (\r\n    <div className={DialogsStyle.dialogsBlock}>\r\n      <div className={DialogsStyle.usersBlock}>\r\n        {UserChatElement}\r\n      </div>\r\n      <div className={DialogsStyle.messagesBlock}>\r\n        {MessagesElement}\r\n        <MessageForm {...props} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport const MessageForm = (props) => {\r\n  let onSendMessageClick = (messageText) => {\r\n    props.sendMessage(messageText.Message)\r\n    messageText.Message = ''\r\n  }\r\n  return (\r\n    <Form\r\n      onSubmit={onSendMessageClick}>\r\n      {({ handleSubmit }) => (\r\n        <form\r\n          className={DialogsStyle.messageInputBlock}\r\n          onSubmit={handleSubmit}>\r\n          <div>\r\n            <Field\r\n              className={DialogsStyle.message__input}\r\n              name=\"Message\"\r\n              component=\"input\"\r\n              placeholder=\"Enter text\"\r\n            />\r\n          </div>\r\n          <button\r\n            className={DialogsStyle.message__button}\r\n            type='submit'>\r\n            <img src=\"https://www.seekpng.com/png/full/51-512819_png-file-svg-whatsapp-send-icon-png.png\" alt=\"\" />\r\n          </button>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  )\r\n}","import React from 'react';\r\nimport { getDialogs, sendMessage } from '../../../Redux/MessageReducer'\r\nimport { Dialogs } from './Dialogs';\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../HOC/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass DialogsContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getDialogs()\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <Dialogs \r\n        UserMessageData={this.props.UserMessageData}\r\n        messagesData={this.props.messagesData}\r\n        sendMessage={this.props.sendMessage}\r\n        />\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    UserMessageData: state.MessagesPage.UserMessageData,\r\n    messagesData: state.MessagesPage.MessagesData,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { sendMessage, getDialogs }),\r\n  withAuthRedirect,\r\n)(DialogsContainer)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuthorised: state.Auth.isAuthorised\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuthorised) {\r\n                return (\r\n                    <Component {...this.props} />\r\n                )\r\n            } else {\r\n                return (\r\n                    <Navigate to='/login' />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["Messages","props","className","MessagesStyle","text","Users","to","id","UsersStyle","name","Dialogs","UserChatElement","UserMessageData","map","dialog","MessagesElement","messagesData","message","DialogsStyle","MessageForm","onSubmit","messageText","sendMessage","Message","handleSubmit","component","placeholder","type","src","alt","DialogsContainer","this","getDialogs","React","compose","connect","state","MessagesPage","MessagesData","withAuthRedirect","mapStateToPropsForRedirect","isAuthorised","Auth","Component","RedirectComponent"],"sourceRoot":""}